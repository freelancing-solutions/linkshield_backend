version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: linkshield_postgres
    environment:
      POSTGRES_DB: linkshield_db
      POSTGRES_USER: linkshield_user
      POSTGRES_PASSWORD: linkshield_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - linkshield_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U linkshield_user -d linkshield_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: linkshield_redis
    command: redis-server --appendonly yes --requirepass linkshield_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - linkshield_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # LinkShield API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: linkshield_api
    environment:
      - DATABASE_URL=postgresql://linkshield_user:linkshield_password@postgres:5432/linkshield_db
      - REDIS_URL=redis://:linkshield_redis_password@redis:6379/0
      - ENVIRONMENT=production
      - DEBUG=false
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - linkshield_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: linkshield_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - linkshield_network
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  linkshield_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16